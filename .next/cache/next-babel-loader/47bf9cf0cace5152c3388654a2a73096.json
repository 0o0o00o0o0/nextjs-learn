{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport dva, { connect } from 'dva-no-router';\nimport { Provider } from 'react-redux';\nimport model from \"../model/index\";\n\nvar checkServer = function checkServer() {\n  return Object.prototype.toString.call(global.process) === '[object process]';\n}; // eslint-disable-next-line\n\n\nvar __NEXT_DVA_STORE__ = '__NEXT_DVA_STORE__';\n\nfunction createDvaStore(initialState) {\n  var app;\n\n  if (initialState) {\n    app = dva({\n      initialState: initialState\n    });\n  } else {\n    app = dva({});\n  }\n\n  var isArray = Array.isArray(model);\n\n  if (isArray) {\n    model.forEach(function (m) {\n      app.model(m);\n    });\n  } else {\n    app.model(model);\n  }\n\n  app.router(function () {});\n  app.start(); // console.log(app);\n  // eslint-disable-next-line\n\n  var store = app._store;\n  return store;\n}\n\nfunction getOrCreateStore(initialState) {\n  var isServer = checkServer();\n\n  if (isServer) {\n    // run in server\n    // console.log('server');\n    return createDvaStore(initialState);\n  } // eslint-disable-next-line\n\n\n  if (!window[__NEXT_DVA_STORE__]) {\n    // console.log('client');\n    // eslint-disable-next-line\n    window[__NEXT_DVA_STORE__] = createDvaStore(initialState);\n  } // eslint-disable-next-line\n\n\n  return window[__NEXT_DVA_STORE__];\n}\n\nexport default function withDva() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function CreateNextPage(Component) {\n    var ComponentWithDva = function ComponentWithDva() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var store = props.store,\n          initialProps = props.initialProps,\n          initialState = props.initialState;\n      var ConnectedComponent = connect.apply(void 0, args)(Component);\n      return React.createElement(Provider, // in client side, it will init store with the initial state tranfer from server side\n      {\n        store: store && store.dispatch ? store : getOrCreateStore(initialState)\n      }, // transfer next.js's props to the page\n      React.createElement(ConnectedComponent, initialProps));\n    };\n\n    ComponentWithDva.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var props,\n          isServer,\n          store,\n          initialProps,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              props = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              // console.log('get......');\n              isServer = checkServer();\n              store = getOrCreateStore(props.req); // call children's getInitialProps\n              // get initProps and transfer in to the page\n\n              if (!Component.getInitialProps) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 6;\n              return Component.getInitialProps(_objectSpread(_objectSpread({}, props), {}, {\n                isServer: isServer,\n                store: store\n              }));\n\n            case 6:\n              _context.t0 = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 9:\n              _context.t0 = {};\n\n            case 10:\n              initialProps = _context.t0;\n              return _context.abrupt(\"return\", {\n                store: store,\n                initialProps: initialProps,\n                initialState: store.getState()\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return ComponentWithDva;\n  };\n}","map":{"version":3,"sources":["E:/zsDir/nextjs-learn/utils/store.ts"],"names":["React","dva","connect","Provider","model","checkServer","Object","prototype","toString","call","global","process","__NEXT_DVA_STORE__","createDvaStore","initialState","app","isArray","Array","forEach","m","router","start","store","_store","getOrCreateStore","isServer","window","withDva","args","CreateNextPage","Component","ComponentWithDva","props","initialProps","ConnectedComponent","createElement","dispatch","getInitialProps","req","getState"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,OAAd,QAA6B,eAA7B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BC,MAAM,CAACC,OAAtC,MAAmD,kBAAzD;AAAA,CAApB,C,CAEA;;;AACA,IAAMC,kBAAkB,GAAG,oBAA3B;;AAEA,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACpC,MAAIC,GAAJ;;AACA,MAAID,YAAJ,EAAkB;AAChBC,IAAAA,GAAG,GAAGd,GAAG,CAAC;AACRa,MAAAA,YAAY,EAAZA;AADQ,KAAD,CAAT;AAGD,GAJD,MAIO;AACLC,IAAAA,GAAG,GAAGd,GAAG,CAAC,EAAD,CAAT;AACD;;AACD,MAAMe,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcZ,KAAd,CAAhB;;AACA,MAAIY,OAAJ,EAAa;AACXZ,IAAAA,KAAK,CAACc,OAAN,CAAc,UAACC,CAAD,EAAO;AACnBJ,MAAAA,GAAG,CAACX,KAAJ,CAAUe,CAAV;AACD,KAFD;AAGD,GAJD,MAIO;AACLJ,IAAAA,GAAG,CAACX,KAAJ,CAAUA,KAAV;AACD;;AACDW,EAAAA,GAAG,CAACK,MAAJ,CAAW,YAAM,CAAG,CAApB;AACAL,EAAAA,GAAG,CAACM,KAAJ,GAlBoC,CAmBpC;AACA;;AACA,MAAMC,KAAK,GAAGP,GAAG,CAACQ,MAAlB;AACA,SAAOD,KAAP;AACD;;AAED,SAASE,gBAAT,CAA0BV,YAA1B,EAAwC;AACtC,MAAMW,QAAQ,GAAGpB,WAAW,EAA5B;;AACA,MAAIoB,QAAJ,EAAc;AAAE;AACd;AACA,WAAOZ,cAAc,CAACC,YAAD,CAArB;AACD,GALqC,CAMtC;;;AACA,MAAI,CAACY,MAAM,CAACd,kBAAD,CAAX,EAAiC;AAC/B;AACA;AACAc,IAAAA,MAAM,CAACd,kBAAD,CAAN,GAA6BC,cAAc,CAACC,YAAD,CAA3C;AACD,GAXqC,CAYtC;;;AACA,SAAOY,MAAM,CAACd,kBAAD,CAAb;AACD;;AAED,eAAe,SAASe,OAAT,GAA0B;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACvC,SAAO,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AACxC,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAqB;AAAA,UAApBC,KAAoB,uEAAP,EAAO;AAAA,UACpCV,KADoC,GACEU,KADF,CACpCV,KADoC;AAAA,UAC7BW,YAD6B,GACED,KADF,CAC7BC,YAD6B;AAAA,UACfnB,YADe,GACEkB,KADF,CACflB,YADe;AAE5C,UAAMoB,kBAAkB,GAAGhC,OAAO,MAAP,SAAW0B,IAAX,EAAiBE,SAAjB,CAA3B;AACA,aAAO9B,KAAK,CAACmC,aAAN,CACLhC,QADK,EAEL;AACA;AAAEmB,QAAAA,KAAK,EAAEA,KAAK,IAAIA,KAAK,CAACc,QAAf,GAA0Bd,KAA1B,GAAkCE,gBAAgB,CAACV,YAAD;AAA3D,OAHK,EAIL;AACAd,MAAAA,KAAK,CAACmC,aAAN,CAAoBD,kBAApB,EAAwCD,YAAxC,CALK,CAAP;AAOD,KAVD;;AAWAF,IAAAA,gBAAgB,CAACM,eAAjB,yEAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOL,cAAAA,KAAP,2DAA8B,EAA9B;AACjC;AACMP,cAAAA,QAF2B,GAEhBpB,WAAW,EAFK;AAG3BiB,cAAAA,KAH2B,GAGnBE,gBAAgB,CAACQ,KAAK,CAACM,GAAP,CAHG,EAIjC;AACA;;AALiC,mBAMZR,SAAS,CAACO,eANE;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOvBP,SAAS,CAACO,eAAV,iCAA+BL,KAA/B;AAAsCP,gBAAAA,QAAQ,EAARA,QAAtC;AAAgDH,gBAAAA,KAAK,EAALA;AAAhD,iBAPuB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,4BAQ7B,EAR6B;;AAAA;AAM3BW,cAAAA,YAN2B;AAAA,+CAS1B;AACLX,gBAAAA,KAAK,EAALA,KADK;AAELW,gBAAAA,YAAY,EAAZA,YAFK;AAGLnB,gBAAAA,YAAY,EAAEQ,KAAK,CAACiB,QAAN;AAHT,eAT0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnC;AAeA,WAAOR,gBAAP;AACD,GA5BD;AA6BD","sourcesContent":["import React from 'react';\nimport dva, { connect } from 'dva-no-router';\nimport { Provider } from 'react-redux';\nimport model from '../model/index';\n\nconst checkServer = () => Object.prototype.toString.call(global.process) === '[object process]';\n\n// eslint-disable-next-line\nconst __NEXT_DVA_STORE__ = '__NEXT_DVA_STORE__'\n\nfunction createDvaStore(initialState) {\n  let app;\n  if (initialState) {\n    app = dva({\n      initialState,\n    });\n  } else {\n    app = dva({});\n  }\n  const isArray = Array.isArray(model);\n  if (isArray) {\n    model.forEach((m) => {\n      app.model(m);\n    });\n  } else {\n    app.model(model);\n  }\n  app.router(() => { });\n  app.start();\n  // console.log(app);\n  // eslint-disable-next-line\n  const store = app._store\n  return store;\n}\n\nfunction getOrCreateStore(initialState) {\n  const isServer = checkServer();\n  if (isServer) { // run in server\n    // console.log('server');\n    return createDvaStore(initialState);\n  }\n  // eslint-disable-next-line\n  if (!window[__NEXT_DVA_STORE__]) {\n    // console.log('client');\n    // eslint-disable-next-line\n    window[__NEXT_DVA_STORE__] = createDvaStore(initialState);\n  }\n  // eslint-disable-next-line\n  return window[__NEXT_DVA_STORE__];\n}\n\nexport default function withDva(...args) {\n  return function CreateNextPage(Component) {\n    const ComponentWithDva = (props: any = {}) => {\n      const { store, initialProps, initialState } = props;\n      const ConnectedComponent = connect(...args)(Component);\n      return React.createElement(\n        Provider,\n        // in client side, it will init store with the initial state tranfer from server side\n        { store: store && store.dispatch ? store : getOrCreateStore(initialState) },\n        // transfer next.js's props to the page\n        React.createElement(ConnectedComponent, initialProps),\n      );\n    };\n    ComponentWithDva.getInitialProps = async (props: { req?: any } = {}) => {\n      // console.log('get......');\n      const isServer = checkServer();\n      const store = getOrCreateStore(props.req);\n      // call children's getInitialProps\n      // get initProps and transfer in to the page\n      const initialProps = Component.getInitialProps\n        ? await Component.getInitialProps({ ...props, isServer, store })\n        : {};\n      return {\n        store,\n        initialProps,\n        initialState: store.getState(),\n      };\n    };\n    return ComponentWithDva;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}