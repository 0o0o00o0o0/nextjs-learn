{"ast":null,"code":"var _jsxFileName = \"E:\\\\zsDir\\\\nextjs-learn\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { Button } from 'antd';\nimport Header from \"../components/HtmlHeader\";\nimport withDva from \"../utils/store\";\n\nconst Home = props => {\n  // const [count, setCount] = useState(0);\n  console.log(props);\n  const {\n    index\n  } = props;\n  const {\n    name,\n    count\n  } = index;\n  return __jsx(React.Fragment, null, \"\\u4F60\\u597D\\u554A\\u6D17\\u5427\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }\n  }), __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), count, __jsx(Button, {\n    onClick: () => props.dispatch({\n      type: 'index/caculate',\n      delta: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"\\u52A01\"), __jsx(Button, {\n    onClick: () => props.dispatch({\n      type: 'index/init'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"\\u52A01\"), __jsx(Link, {\n    href: \"/user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"\\u53BBuser\")), name);\n};\n\nHome.getInitialProps = async props => {\n  // first time run in server side\n  // other times run in client side ( client side init with default props\n  // console.log('get init props');\n  const {\n    pathname,\n    query,\n    isServer,\n    store\n  } = props; // dispatch effects to fetch data here\n  // await props.store.dispatch({ type: 'index/init' });\n\n  return {\n    // dont use store as property name, it will confilct with initial store\n    pathname,\n    query,\n    isServer,\n    dvaStore: store\n  };\n};\n\nexport default withDva(state => {\n  console.log(state);\n  return {\n    index: state.index\n  };\n})(Home); // export default WithComponent(Home, props => {\n//     return new Promise((res) => {\n//         setTimeout(async () => {\n//             // await props.store.dispatch({ type: 'index/init' })\n//             res({ a: 67 })\n//         }, 0);\n//     })\n// });;","map":{"version":3,"sources":["E:/zsDir/nextjs-learn/pages/index.tsx"],"names":["React","Link","Button","Header","withDva","Home","props","console","log","index","name","count","dispatch","type","delta","getInitialProps","pathname","query","isServer","store","dvaStore","state"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,MAAP;AAEA,OAAOC,OAAP;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAmB;AAC5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAYH,KAAlB;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBF,KAAxB;AACA,SACI,8DAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,EACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKE,KAFL,EAGI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAML,KAAK,CAACM,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAAf,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMR,KAAK,CAACM,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAf,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CALJ,EAQKH,IARL,CADJ;AAYH,CAjBD;;AAkBAL,IAAI,CAACU,eAAL,GAAuB,MAAOT,KAAP,IAAiB;AACpC;AACA;AACA;AACA,QAAM;AACFU,IAAAA,QADE;AACQC,IAAAA,KADR;AACeC,IAAAA,QADf;AACyBC,IAAAA;AADzB,MAEFb,KAFJ,CAJoC,CAOpC;AACA;;AACA,SAAO;AACH;AACAU,IAAAA,QAFG;AAEOC,IAAAA,KAFP;AAEcC,IAAAA,QAFd;AAEwBE,IAAAA,QAAQ,EAAED;AAFlC,GAAP;AAIH,CAbD;;AAcA,eAAef,OAAO,CAAEiB,KAAD,IAAW;AAAEd,EAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AAAmB,SAAO;AAAEZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AAAf,GAAP;AAAgC,CAAjE,CAAP,CAA0EJ,IAA1E,CAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { Button } from 'antd';\r\nimport Header from '../components/HtmlHeader';\r\nimport { WithComponent, Iprops } from '../utils/commonsStore';\r\nimport withDva from '../utils/store'\r\nconst Home = (props: Iprops) => {\r\n    // const [count, setCount] = useState(0);\r\n    console.log(props)\r\n    const { index } = props;\r\n    const { name, count } = index;\r\n    return (\r\n        <>你好啊洗吧<br />\r\n            <Header />\r\n            {count}\r\n            <Button onClick={() => props.dispatch({ type: 'index/caculate', delta: 1 })}>加1</Button>\r\n            <Button onClick={() => props.dispatch({ type: 'index/init' })}>加1</Button>\r\n            <Link href='/user'>\r\n                <a>去user</a>\r\n            </Link>\r\n            {name}\r\n        </>\r\n    )\r\n};\r\nHome.getInitialProps = async (props) => {\r\n    // first time run in server side\r\n    // other times run in client side ( client side init with default props\r\n    // console.log('get init props');\r\n    const {\r\n        pathname, query, isServer, store,\r\n    } = props;\r\n    // dispatch effects to fetch data here\r\n    // await props.store.dispatch({ type: 'index/init' });\r\n    return {\r\n        // dont use store as property name, it will confilct with initial store\r\n        pathname, query, isServer, dvaStore: store,\r\n    };\r\n}\r\nexport default withDva((state) => { console.log(state);return { index: state.index }; })(Home);\r\n// export default WithComponent(Home, props => {\r\n//     return new Promise((res) => {\r\n//         setTimeout(async () => {\r\n//             // await props.store.dispatch({ type: 'index/init' })\r\n//             res({ a: 67 })\r\n//         }, 0);\r\n//     })\r\n// });;"]},"metadata":{},"sourceType":"module"}