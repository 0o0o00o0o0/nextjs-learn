{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\zsDir\\\\nextjs-learn\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { Button } from 'antd';\nimport Header from \"../components/HtmlHeader\";\n\nvar Home = function Home(props) {\n  // const [count, setCount] = useState(0);\n  console.log(props);\n  var index = props.index;\n  var name = index.name,\n      count = index.count;\n  return __jsx(React.Fragment, null, \"\\u4F60\\u597D\\u554A\\u6D17\\u5427\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }\n  }), __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), count, __jsx(Button, {\n    onClick: function onClick() {\n      return props.dispatch({\n        type: 'index/caculate',\n        delta: 1\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"\\u52A01\"), __jsx(Button, {\n    onClick: function onClick() {\n      return props.dispatch({\n        type: 'index/init'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"\\u52A01\"), __jsx(Link, {\n    href: \"/user\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"\\u53BBuser\")), name);\n};\n\n_c = Home;\n\nHome.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var pathname, query, isServer, store;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // first time run in server side\n            // other times run in client side ( client side init with default props\n            // console.log('get init props');\n            pathname = props.pathname, query = props.query, isServer = props.isServer, store = props.store; // dispatch effects to fetch data here\n\n            _context.next = 3;\n            return props.store.dispatch({\n              type: 'index/init'\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", {\n              // dont use store as property name, it will confilct with initial store\n              pathname: pathname,\n              query: query,\n              isServer: isServer,\n              dvaStore: store\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default WithDva(function (state) {\n  return {\n    index: state.index\n  };\n})(Home); // export default WithComponent(Home, props => {\n//     return new Promise((res) => {\n//         setTimeout(async () => {\n//             // await props.store.dispatch({ type: 'index/init' })\n//             res({ a: 67 })\n//         }, 0);\n//     })\n// });;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/zsDir/nextjs-learn/pages/index.tsx"],"names":["React","Link","Button","Header","Home","props","console","log","index","name","count","dispatch","type","delta","getInitialProps","pathname","query","isServer","store","dvaStore","WithDva","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,MAAP;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAmB;AAC5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAF4B,MAGpBG,KAHoB,GAGVH,KAHU,CAGpBG,KAHoB;AAAA,MAIpBC,IAJoB,GAIJD,KAJI,CAIpBC,IAJoB;AAAA,MAIdC,KAJc,GAIJF,KAJI,CAIdE,KAJc;AAK5B,SACI,8DAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,EACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKA,KAFL,EAGI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAML,KAAK,CAACM,QAAN,CAAe;AAAEC,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAf,CAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMR,KAAK,CAACM,QAAN,CAAe;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAf,CAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CALJ,EAQKH,IARL,CADJ;AAYH,CAjBD;;KAAML,I;;AAkBNA,IAAI,CAACU,eAAL;AAAA,sEAAqB,iBAAMT,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB;AACA;AACA;AAEEU,YAAAA,QALe,GAMbV,KANa,CAKfU,QALe,EAKLC,KALK,GAMbX,KANa,CAKLW,KALK,EAKEC,QALF,GAMbZ,KANa,CAKEY,QALF,EAKYC,KALZ,GAMbb,KANa,CAKYa,KALZ,EAOjB;;AAPiB;AAAA,mBAQXb,KAAK,CAACa,KAAN,CAAYP,QAAZ,CAAqB;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAArB,CARW;;AAAA;AAAA,6CASV;AACL;AACAG,cAAAA,QAAQ,EAARA,QAFK;AAEKC,cAAAA,KAAK,EAALA,KAFL;AAEYC,cAAAA,QAAQ,EAARA,QAFZ;AAEsBE,cAAAA,QAAQ,EAAED;AAFhC,aATU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;;AAcE,eAAeE,OAAO,CAAC,UAACC,KAAD,EAAW;AAAE,SAAO;AAAEb,IAAAA,KAAK,EAAEa,KAAK,CAACb;AAAf,GAAP;AAAgC,CAA9C,CAAP,CAAuDJ,IAAvD,CAAf,C,CACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { Button } from 'antd';\r\nimport Header from '../components/HtmlHeader';\r\nimport { WithComponent, Iprops } from '../utils/commonsStore';\r\nimport {withDva} from '../utils/store'\r\nconst Home = (props: Iprops) => {\r\n    // const [count, setCount] = useState(0);\r\n    console.log(props)\r\n    const { index } = props;\r\n    const { name, count } = index;\r\n    return (\r\n        <>你好啊洗吧<br />\r\n            <Header />\r\n            {count}\r\n            <Button onClick={() => props.dispatch({ type: 'index/caculate', delta: 1 })}>加1</Button>\r\n            <Button onClick={() => props.dispatch({ type: 'index/init' })}>加1</Button>\r\n            <Link href='/user'>\r\n                <a>去user</a>\r\n            </Link>\r\n            {name}\r\n        </>\r\n    )\r\n};\r\nHome.getInitialProps=async(props) =>{\r\n    // first time run in server side\r\n    // other times run in client side ( client side init with default props\r\n    // console.log('get init props');\r\n    const {\r\n      pathname, query, isServer, store,\r\n    } = props;\r\n    // dispatch effects to fetch data here\r\n    await props.store.dispatch({ type: 'index/init' });\r\n    return {\r\n      // dont use store as property name, it will confilct with initial store\r\n      pathname, query, isServer, dvaStore: store,\r\n    };\r\n  }\r\n  export default WithDva((state) => { return { index: state.index }; })(Home);\r\n// export default WithComponent(Home, props => {\r\n//     return new Promise((res) => {\r\n//         setTimeout(async () => {\r\n//             // await props.store.dispatch({ type: 'index/init' })\r\n//             res({ a: 67 })\r\n//         }, 0);\r\n//     })\r\n// });;"]},"metadata":{},"sourceType":"module"}