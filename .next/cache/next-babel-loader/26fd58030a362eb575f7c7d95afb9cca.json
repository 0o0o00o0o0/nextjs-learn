{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar delay = function delay(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nvar model = {\n  namespace: 'index',\n  state: {\n    name: 'hopperhuang',\n    count: 0,\n    init: false\n  },\n  reducers: {\n    caculate: function caculate(state, payload) {\n      var count = state.count;\n      var delta = payload.delta;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: count + delta\n      });\n    }\n  },\n  effects: {\n    init: /*#__PURE__*/_regeneratorRuntime.mark(function init(action, _ref) {\n      var put;\n      return _regeneratorRuntime.wrap(function init$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              put = _ref.put;\n              _context.next = 3;\n              return delay(2000);\n\n            case 3:\n              _context.next = 5;\n              return put({\n                type: 'caculate',\n                delta: 1\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, init);\n    })\n  }\n};\nexport default model;","map":{"version":3,"sources":["E:/zsDir/nextjs-learn/model/homepage.ts"],"names":["delay","timeout","Promise","resolve","setTimeout","model","namespace","state","name","count","init","reducers","caculate","payload","delta","effects","action","put","type"],"mappings":";;;;;;;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,OAAO;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAd;AAAA,GAAnB,CAAJ;AAAA,CAArB;;AAEA,IAAMI,KAAK,GAAG;AACZC,EAAAA,SAAS,EAAE,OADC;AAEZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,KAAK,EAAE,CAFF;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAFK;AAOZC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QADQ,oBACCL,KADD,EACQM,OADR,EACiB;AAAA,UACfJ,KADe,GACLF,KADK,CACfE,KADe;AAAA,UAEfK,KAFe,GAELD,OAFK,CAEfC,KAFe;AAGvB,6CAAYP,KAAZ;AAAmBE,QAAAA,KAAK,EAAEA,KAAK,GAAGK;AAAlC;AACD;AALO,GAPE;AAcZC,EAAAA,OAAO,EAAE;AACNL,IAAAA,IADM,sDACDM,MADC;AAAA;AAAA;AAAA;AAAA;AAAA;AACSC,cAAAA,GADT,QACSA,GADT;AAAA;AAEL,qBAAMjB,KAAK,CAAC,IAAD,CAAX;;AAFK;AAAA;AAGL,qBAAMiB,GAAG,CAAC;AAAEC,gBAAAA,IAAI,EAAE,UAAR;AAAoBJ,gBAAAA,KAAK,EAAE;AAA3B,eAAD,CAAT;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdG,CAAd;AAsBA,eAAeT,KAAf","sourcesContent":["const delay = timeout => new Promise(resolve => setTimeout(resolve, timeout));\n\nconst model = {\n  namespace: 'index',\n  state: {\n    name: 'hopperhuang',\n    count: 0,\n    init: false,\n  },\n  reducers: {\n    caculate(state, payload) {\n      const { count } = state;\n      const { delta } = payload;\n      return { ...state, count: count + delta };\n    },\n  },\n  effects: {\n    *init(action, { put }) {\n      yield delay(2000);\n      yield put({ type: 'caculate', delta: 1 });\n    },\n  },\n};\n\nexport default model;\n\n"]},"metadata":{},"sourceType":"module"}